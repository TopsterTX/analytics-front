name: Next.js CI/CD Pipeline

on:
  push:
    branches:
      - main    # Триггер на пуш в основную ветку
  pull_request:
    branches:
      - main    # Триггер на pull-request в основную ветку

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Устанавливаем Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # Укажите версию Node.js, подходящую для вашего проекта

      # Шаг 3: Устанавливаем зависимости
      - name: Install dependencies
        run: npm install

      # Шаг 4: Тестирование
      - name: Run tests
        run: npm run test  # Убедитесь, что у вас есть команда `test` в package.json

      # Шаг 5: Сборка приложения
      - name: Build application
        run: npm run build

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker imageS
        run: docker build -t analytics-front-dev .

      - name: Push Docker image to registry
        run: |
          docker tag analytics-front-dev ${{ secrets.DOCKER_REGISTRY }}/analytics-front-dev:latest
          docker push ${{ secrets.DOCKER_REGISTRY }}/analytics-front-dev:latest

      - name: Deploy Docker container via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          script: |
            docker pull localhost:5000/analytics-front-dev:latest;
            cd ~/code/configs/analytics-web;
            docker-compose up --build -d;